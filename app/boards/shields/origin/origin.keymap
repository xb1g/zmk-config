#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
                            //hold tap, tap tap
            bindings = <&kp LSHFT>, <&kp LCTRL>, <&kp LALT>;
        };
        spc_ent: spc_ent {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&kp ENTER>;
        };
        toly: to_lyr {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =<&to 0>, <&lt 1 SPACE>, <&lt 2 ENTER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |    Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    |    \    |
// |   TAB   |    A    |    S    |    D    |    F    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |    '    |
// |  SHIFT  |    Z    |    X    |    C    |    V    |    B    | CTRL+A  | CTRL+C  |  |  CTRL+V |  CTRL+X |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
//                               |   GUI   |   DEL   | RETURN  |  SPACE  | ESCAPE  |  |  RETURN |  SPACE  |   TAB   |   BSPC  |  R ALT  |
            bindings = <
    &kp Q    &kp W    &kp E     &kp R     &kp T                                                 &kp Y     &kp U     &kp I     &kp O     &kp P    
    &kp A    &kp S    &kp D     &kp F     &kp G                                                 &kp H     &kp J     &kp K     &kp L     &kp SEMI
    &kp Z    &kp X    &kp C     &kp V     &kp B                                                 &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH
                                &kp LGUI  &toly   &td_mt                     &kp SPACE &kp TAB   &kp BSPC  
            >;
                    };

        lower_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |    Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    |    \    |
// |   TAB   |    A    |    S    |    D    |    F    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |    '    |
// |  SHIFT  |    Z    |    X    |    C    |    V    |    B    | CTRL+A  | CTRL+C  |  |  CTRL+V |  CTRL+X |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
//                               |   GUI   |   DEL   | RETURN  |  SPACE  | ESCAPE  |  |  RETURN |  SPACE  |   TAB   |   BSPC  |  R ALT  |
            bindings = <
    &kp Y     &kp U     &kp I     &kp O     &kp P                                                  &kp Y     &kp U     &kp I     &kp O     &kp P    
    &kp H     &kp J     &kp K     &kp L     &kp SEMI                                                &kp H     &kp J     &kp K     &kp L     &kp SEMI
    &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH                                                 &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH
                                  &kp LGUI  &toly   &td_mt                      &kp SPACE &kp TAB   &kp BSPC
                        >;
            };

        raise_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |    Q    |    W    |    E    |    R    |    T    |                                          |    Y    |    U    |    I    |    O    |    P    |    \    |
// |   TAB   |    A    |    S    |    D    |    F    |    G    |                                          |    H    |    J    |    K    |    L    |    ;    |    '    |
// |  SHIFT  |    Z    |    X    |    C    |    V    |    B    | CTRL+A  | CTRL+C  |  |  CTRL+V |  CTRL+X |    N    |    M    |    ,    |    .    |    /    |  R CTRL |
//                               |   GUI   |   DEL   | RETURN  |  SPACE  | ESCAPE  |  |  RETURN |  SPACE  |   TAB   |   BSPC  |  R ALT  |
            bindings = <
    &kp N1     &kp N2     &kp N3  &kp N4     &kp N5                                                  &kp Y     &kp U     &kp I     &kp O     &kp P    
    &kp N6     &kp N7     &kp N8  &kp N9      &kp N0                                                &kp H     &kp J     &kp K     &kp L     &kp SEMI
    &kp N7     &kp N8     &kp N9    &kp N     &kp M                                               &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH
                                 &kp LGUI  &toly  &td_mt                      &kp SPACE &kp TAB   &kp BSPC  
            >;

        };
    };
     
    // combos {
    //     compatible = "zmk,combos";
    //     combo_esc {
    //         timeout-ms = <50>;
    //         key-positions = <4 9>;
    //         bindings = <&kp ESC>;
    //     };
    //     combo_tab {
    //         timeout-ms = <50>;
    //         key-positions = <3 8>;
    //         bindings = <&kp ESC>;
    //     };
    // };

};
